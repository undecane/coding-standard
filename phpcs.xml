<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
    <description>The coding standard for PHP_CodeSniffer itself.</description>

    <!-- Files -->
    <file>config</file>
    <file>tests</file>

    <!-- Excludes -->
    <exclude-pattern>vendor/</exclude-pattern>

    <!-- Arguments -->
    <arg name="basepath" value="."/>
    <arg name="tab-width" value="4"/>
    <arg name="colors"/>
    <arg name="parallel" value="75"/>
    <arg value="np"/>

    <rule ref="PSR12">
        <exclude name="PSR12.Files.FileHeader.SpacingAfterBlock"/>
        <exclude name="PSR12.Classes.AnonClassDeclaration.SpaceAfterKeyword"/>
        <exclude name="PSR12.Files.FileHeader.IncorrectOrder"/>
        <exclude name="PSR12.Files.FileHeader.IncorrectGrouping"/>
        <exclude name="PSR12.Files.OpenTag.NotAlone"/>
    </rule>
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.NoKeySpecified"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeySpecified"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.Commenting.LongConditionClosingComment"/>
    <rule ref="Squiz.Commenting.PostStatementComment"/>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="Zend.Files.ClosingTag"/>

    <rule ref="PEAR.Functions.FunctionCallSignature">
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
    </rule>
    <rule ref="PSR2.Methods.FunctionCallSignature"/>

    <!-- Private methods MUST not be prefixed with an underscore -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- Private properties MUST not be prefixed with an underscore -->
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>

    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern type="relative">*/migrations/*</exclude-pattern>
        <exclude-pattern type="relative">*/seeds/*</exclude-pattern>
    </rule>

    <!-- Configs -->
    <config name="installed_paths" value="vendor/slevomat/coding-standard"/>

    <!-- Internal -->
    <rule ref="Internal.Tokenizer.Exception">
        <type>error</type>
    </rule>

    <!-- Style -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="80"/>
            <property name="absoluteLineLimit" value="120"/>
            <property name="ignoreComments" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Formatting.SpaceAfterNot"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.SAPIUsage"/>
    <rule ref="Generic.PHP.Syntax"/>
    <rule ref="Generic.VersionControl.GitMergeConflict"/>
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="PSR1.Files.SideEffects"/>
    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>*Test.php</exclude-pattern>
    </rule>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR2.Files.ClosingTag"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>
    <rule ref="PSR12.Classes.ClassInstantiation"/>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
    <!--    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">-->
    <!--        <properties>-->
    <!--            <property name="linesCountBetweenDifferentAnnotationsTypes" value="1"/>-->
    <!--        </properties>-->
    <!--    </rule>-->
    <!--    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>-->
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing"/>
    <rule ref="SlevomatCodingStandard.Namespaces.RequireOneNamespaceInFile"/>
    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing"/>
    <rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>
    <rule ref="SlevomatCodingStandard.PHP.ShortList"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>

    <!-- Code > Classes -->
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>
    <rule ref="SlevomatCodingStandard.Classes.UnusedPrivateElements">
        <exclude name="SlevomatCodingStandard.Classes.UnusedPrivateElements.UnusedMethod"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>

    <!-- Code > Code -->
    <rule ref="Generic.Arrays.ArrayIndent"/>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure">
        <properties>
            <property name="error" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR12.Keywords.ShortFormTypeKeywords"/>
    <rule ref="Squiz.PHP.Eval"/>
    <!--    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>-->
    <rule ref="Zend.Debug.CodeAnalyzer"/>
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
    <!--    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEmpty"/>-->
    <!--    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>-->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>
    <!--    <rule ref="SlevomatCodingStandard.Functions.UnusedParameter"/>-->
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
    <!--    <rule ref="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>-->
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
    <!--    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>-->
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator"/>
    <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators"/>
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
    <!--    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">-->
    <!--        <properties>-->
    <!--            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2"/>-->
    <!--            <property name="spacesCountAroundEqualsSign" value="0"/>-->
    <!--        </properties>-->
    <!--    </rule>-->
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
    <!--    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable"/>-->
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>

    <!-- Code > Comments -->
    <rule ref="Generic.Commenting.Fixme"/>
    <rule ref="Generic.Commenting.Todo"/>
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenComments"/>
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration">
        <exclude name="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.MissingVariable"/>
        <exclude name="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration.NoAssignment"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.UselessFunctionDocComment">
        <exclude name="SlevomatCodingStandard.Commenting.UselessFunctionDocComment.UselessDocComment"/>
    </rule>
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
    <!--    <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax"/>-->
    <!--    <rule ref="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint"/>-->
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingAnyTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.UselessAnnotation"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.PropertyTypeHint.MissingAnyTypeHint"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingAnyTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingNativeTypeHint"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>

    <!-- Code > Functions -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <!--    <rule ref="Generic.PHP.ForbiddenFunctions"/>-->
    <rule ref="PSR12.Functions.NullableTypeDeclaration"/>
    <!--    <rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>-->
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure"/>

    <!-- Code > Globally -->
    <rule ref="Squiz.PHP.GlobalKeyword"/>

    <!-- Architecture > Classes -->
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="PSR1.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousAbstractClassNaming"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousInterfaceNaming"/>

    <!-- Architecture > Files -->
    <!--    <rule ref="SlevomatCodingStandard.Classes.SuperfluousExceptionNaming"/>-->

    <!-- Architecture > Functions -->
    <!-- -->

    <!-- Architecture > Globally -->
    <!-- -->

    <!-- Architecture > Interfaces -->
    <rule ref="Generic.Files.OneInterfacePerFile"/>

    <!-- Architecture > Namespaces -->
    <rule ref="PSR12.Namespaces.CompoundNamespaceDepth"/>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
    <!--    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>-->

    <!-- Architecture > Traits -->
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <rule ref="SlevomatCodingStandard.Classes.SuperfluousTraitNaming"/>

</ruleset>
